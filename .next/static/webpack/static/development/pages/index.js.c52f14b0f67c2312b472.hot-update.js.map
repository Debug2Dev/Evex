{"version":3,"file":"static/webpack/static/development/pages/index.js.c52f14b0f67c2312b472.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport MuiLink from '@material-ui/core/Link';\nimport ComponentIndexPage from '../component/Index';\nimport { withRedux } from '../lib/redux';\nimport { getConfig } from '../lib/action/AppAction'\nimport { i18n, Link, withTranslation } from '../i18n'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright Â© '}\n      <MuiLink color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </MuiLink>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst Index = (props) => {\n  console.log(props, \"props\")\n  const { t, getConfig } = props;\n  \n  useEffect(() => {\n    getConfig()\n  }, [])\n\n  return (\n    <Container maxWidth=\"sm\">\n      <Box my={4}>\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n        <button\n          type='button'\n          onClick={() => i18n.changeLanguage(i18n.language === 'en' ? 'de' : 'en')}\n        >\n          {t('change-locale')}\n        </button>\n        \n        {t('title')} - {process.env.REACT_APP_API_HOST}\n        </Typography>\n        <ComponentIndexPage t={t}/>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n\nIndex.getInitialProps = ({ reduxStore }) => {\n  const { dispatch } = reduxStore;\n\n  dispatch(getConfig())\n\n  return {\n    namespacesRequired: ['common']\n  }\n}\n\nIndex.propTypes = {\n  t: PropTypes.func.isRequired,\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getConfig: bindActionCreators(getConfig, dispatch)\n  }\n}\n// const mapStateToProps = state => {\n//   return {config: state}\n// }\n\nexport default withTranslation('common')(withRedux(connect(null, mapDispatchToProps)(Index)))\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AADA;AAAA;AAIA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAAA;AAAA;AAGA;AAEA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AACA;AAGA;AACA;AACA;AADA;AAGA;AAEA;AACA;AACA;AACA;AAAA;;;;A","sourceRoot":""}